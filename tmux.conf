# set -g means "global", i.e. all tmux sessions we create. Is there a way to set only for specific sessions?
set -g prefix C-a
bind C-a send-prefix

# delay between prefix and command
set -s escape-time 1

set -g default-terminal 'screen-256color'

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

set -g history-limit 30000

if-shell "uname | grep -q Darwin" "source-file .tmux.darwin" "source-file .tmux.linux"

set -g mouse on

setw -g mode-keys vi
bind-key -Tcopy-mode-vi v send -X begin-selection
bind-key -Tcopy-mode-vi r send -X rectangle-toggle

bind P paste-buffer

set -g status-style fg=white,bg=colour28
setw -g window-status-style fg=colour254,bg=colour242
setw -g window-status-current-style fg=colour0,bold,bg=colour184

# Don't like these two settings too much
# setw -g pane-border-style fg=green,bg=black
# setw -g pane-active-border-style fg=white,bg=black

# Dim inactive panels
setw -g window-style fg=colour250,bg=colour237
setw -g window-active-style fg=colour250,bg=colour0

setw -g monitor-activity on
set -g visual-activity off
setw -g window-status-activity-style fg=colour9,bg=colour238

set -g base-index 1
setw -g pane-base-index 1

bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -c "#{pane_current_path}"
